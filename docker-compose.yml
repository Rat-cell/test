version: '3.8'

services:
  # Redis for caching and session storage (optional but good for production)
  redis:
    image: redis:7-alpine
    container_name: campus_locker_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:v1.0.1
    platform: linux/amd64  # Specify platform for Apple Silicon compatibility
    container_name: campus_locker_mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main Application
  app:
    build:
      context: ./campus_locker_system
      dockerfile: Dockerfile
    container_name: campus_locker_app
    ports:
      - "5001:80"  # Use port 5001 externally to avoid conflict with macOS Control Center
    environment:
      # Flask Configuration
      - FLASK_ENV=production
      - FLASK_APP=run.py
      - SECRET_KEY=your-super-secret-key-change-in-production
      
      # Database Configuration (SQLite)
      - DATABASE_URL=sqlite:////app/databases/campus_locker.db
      - SQLALCHEMY_DATABASE_URI=sqlite:////app/databases/campus_locker.db
      - AUDIT_DATABASE_URL=sqlite:////app/databases/campus_locker_audit.db
      
      # Redis Configuration (optional)
      - REDIS_URL=redis://redis:6379/0
      
      # Email Configuration
      - MAIL_SERVER=mailhog
      - MAIL_PORT=1025
      - MAIL_USE_TLS=False
      - MAIL_USE_SSL=False
      - MAIL_USERNAME=
      - MAIL_PASSWORD=
      - MAIL_DEFAULT_SENDER=noreply@campuslocker.local
      
      # Flask URL Generation Configuration
      - SERVER_NAME=localhost
      - PREFERRED_URL_SCHEME=http
      - APPLICATION_ROOT=/
      
      # Application Configuration
      - PARCEL_MAX_PICKUP_DAYS=7
      - PARCEL_DEFAULT_PIN_VALIDITY_DAYS=7
      - ENABLE_LOCKER_SENSOR_DATA_FEATURE=true
      - DEFAULT_LOCKER_SENSOR_STATE_IF_UNAVAILABLE=false
      
      # Locker Configuration
      - ENABLE_DEFAULT_LOCKER_SEEDING=true
      - LOCKER_SIMPLE_CONFIG=count:15,size_small:5,size_medium:5,size_large:5,location_prefix:HWR Locker {locker_id}
      
      # Logging
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/campus_locker.log
    
    volumes:
      - app_logs:/app/logs
      - ./campus_locker_system/databases:/app/databases
      - app_data:/app/data
    
    depends_on:
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: campus_locker_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_data:
    driver: local

networks:
  default:
    name: campus_locker_network 